var SIMONE = function () {    var that = this;    var currentPlaybackId;    var isPlayingPattern = false;    var isReadyForInput  = false;    var pattern = new Array(50); //the array for the pattern    var currentLevel=0;    var startButtonRed = "images/startButtonRed.png";    var startButtonGreen = "images/startButtonGreen.png";    var startButtonYellow = "images/startButtonYellow.png";    var clearButton = "images/clear.png";    var interval = 1000; //milliseconds    var pageButtons = new Array(4);    var isGameOver = false;    //keep track of the attempt number  (when the user clicks it increments until the next trial)    var currentTrialIndex = 0;    var animationTimers = new Array();    var lastButtonClicked;    return {            resetGame: function () {        	isPlayingPattern = false;        	isReadyForInput  = false;        	setCurrentLevel(0);        },        createPattern: function () {        	for(var i = 0; i < pattern.length; i++) {        		var nextColor = Math.floor(Math.random() * 4);	        		pattern[i] = nextColor;        	}		        },                nextLevel: function () {        	currentLevel++;        },                runPattern: function () {        	changeDisplayForRunning(startButtonYellow);        	isPatternPlaying = true;        	isReadyForInput  = false;        	//give a small delay...        	setTimeout("animate(0)", 1000);        },        initit = function () {        	pageButtons[0] = document.getElementById("button0");        	pageButtons[1] = document.getElementById("button1");        	pageButtons[2] = document.getElementById("button2");        	pageButtons[3] = document.getElementById("button3");        	pageButtons[0].colorImage = "images/green_led_on.png";        	pageButtons[1].colorImage = "images/red_led_on.png";        	pageButtons[2].colorImage = "images/yellow_led_on.png";        	pageButtons[3].colorImage = "images/blue_led_on.png";        	for(var i = 0; i < pageButtons.length; i++) {        		pageButtons[i].clearImage = "images/clear.png";        		pageButtons[i].src = pageButtons[i].clearImage;        	}        	document.getElementById("startButton").onclick = startGame;        	document.getElementById("startButton").src = startButtonRed;        	changeLevelDisplay("READY");        },        animate: function (currentPos) {        	//play animation, if more then call self again        	if(currentPos < currentLevel) {        		playButton(pattern[currentPos]);        		animationTimers.push(setTimeout("animate(" + (++currentPos) + ")", interval));        	}        	else {        		animationTimers.push(setTimeout("getReadyForInput()", 2));        	}        },        getReadyForInput(): function () {        	isReadyForInput  = true;        	isPlayingPattern = false;        	currentTrialIndex = 0;        	changeDisplayForRunning(startButtonGreen);        },        playButton: function (num) {        	var button = document.getElementById("button" + num);        	button.src = button.colorImage;        	lastButtonClicked = button;        	//now tell it to flip back        	setTimeout("flipBack(lastButtonClicked)", interval - 200);			        },        flipBack: function (button) {        	button.src = button.clearImage;        },        swapDown: function (event) {        	if(isReadyForInput) {        		event.target.src = event.target.colorImage;        	}        },        swapUp: function (event) {        	if(isReadyForInput) {        		event.target.src = event.target.clearImage;        		getButtonInput(event.target.id);        	}        },        getButtonInput: function (id) {        	if(!isPlayingPattern && isReadyForInput) {        		checkPress(id);        	}        },        getButtonNumber: function (id) {        	return id.charAt(id.length - 1 );        },        checkPress: function (id) {        	//get the image number, yes this is ugly        	if(getButtonNumber(id) == pattern[currentTrialIndex]){        	    currentTrialIndex++;        		//do we wait for another click? or move on?        		if(!(currentTrialIndex < currentLevel)) {        			nextLevel();        			changeLevelDisplay(currentLevel);        			runPattern();        		}        	}        	else {         		gameOver();        	}        },        changeDisplayForRunning: function (buttonType) {        	document.getElementById("startButton").src = buttonType;        },        changeLevelDisplay: function (txt) {          	document.getElementById("levelDisplay").innerHTML = txt        }        startGame: function () {        	clearAnimationTimers();        	resetGame();        	getReadyForInput();        	createPattern();        	setCurrentLevel(1);        	changeDisplayForRunning(startButtonYellow);        	changeLevelDisplay(currentLevel);        	runPattern();        },	        setCurrentLevel: function (level) {        	currentLevel = level;	        },        /**        * Clears the timers for the animations.  This is so that if a person clicks the start/reset        * button during an animation, they will stop...        */        clearAnimationTimers: function () {        	for(var i = 0; i < animationTimers.length; i++)        	{        		var timer = animationTimers.pop();        		if(timer)        		{        			try{        				clearTimout(timer);        			}catch(e){        				//really can't do anything}        			}        		}        	}        },        gameOver: function () {        	clearAnimationTimers();        	changeDisplayForRunning(startButtonRed);        	isReadyForInput = false;        	isGameOver = true;        },                onhide: function onhide() {        },        onshow: function() {            initit();        }                    }        }();if(window.widget) {	widget.onhide = SIMONE.onhide();	widget.onshow = SIMONE.onshow();}